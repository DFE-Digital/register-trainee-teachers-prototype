
{# Prepend each autocomplete option with 'data-' #}
{% set attributes = {
  "data-autoselect": params.autocompleteOptions.autoselect,
  "data-min-length": params.autocompleteOptions.minLength,
  "data-placeholder": params.autocompleteOptions.placeholder,
  "data-showAllValues": params.autocompleteOptions.showAllValues,
  "data-show-no-options-found": params.autocompleteOptions['show-no-options-found'],
  "data-autocomplete-values": params.autocompleteValues | dump
} | deleteBlankAttributes %}

{% set showSuggestions = params.autocompleteOptions.showSuggestionsBanner %}

{# Push data attributes back in to params #}
{% set params = params | setAttribute("attributes", attributes) %}

{% set params = params | deleteAttribute("autocompleteOptions") %}
  

<div data-module="app-autocomplete" class="{{ 'suggestions' if showSuggestions}} {{params.parentClasses}}">

  {% if autocompleteType == "input" %}

    {% from "govuk/components/input/macro.njk" import govukInput %}
    {{ govukInput(params)}}
    {# Container is where the autocomplete will get inserted
    our javascript init code will move this within the input form-group #}
    <div id="{{params.id}}-autocomplete-container" class=""></div>

  {% elseif autocompleteType == "select" %}

    {% from "govuk/components/select/macro.njk" import govukSelect %}

    {# Prepare a default first item #}
    {% set defaultItemShouldBeSelected = true %}

    {# Check if value exists in items - if so, we shouldn't have a default selected item #}
    {% if params.value %}
      {% for item in params.items %}
        {% if params.value == item.value %}
          {% set defaultItemShouldBeSelected = false %}
        {% endif %}
      {% endfor %}
      
    {% endif %}

    {# First item should either be an empty row or an instruction #}
    {% if params.allowEmpty %}
      {% set firstItem = {
        value: "",
        text: "",
        selected: defaultItemShouldBeSelected
      } %}
    {% else %}
      {% set firstItem = {
        value: "",
        text: "Please select",
        disabled: true,
        selected: defaultItemShouldBeSelected
      } %}
    {% endif %}

    {% set selectItems = [firstItem] %}

    {# Loop through items and check if any should be selected #}
    {% for item in params.items %}
      {% if params.value == item.value %}
        {% set item = item | setAttribute('selected', true) %}
      {% endif %}
      {% set selectItems = selectItems | push(item) %}
    {% endfor %}

    {% set params = params | setAttribute("items", selectItems) %}

    {{ govukSelect(params) }}

  {% endif %}

 </div>
